- become: true
  handlers:
  - listen: restart nginx
    name: restart nginx
    service:
      name: nginx
      state: restarted
  hosts: '{{ target_servers | default(''all'') }}'
  name: Configure webapp on Debian
  tasks:
  - block:
    - check_mode: false
      loop:
      - nginx
      - docker
      name: Install required packages
      package:
        name: '{{ item }}'
        state: present
        update_cache: true
    name: Packages tasks
  - block:
    - copy:
        content: |-
          events {}
          http {
              server {
                  listen 80;
                  server_name localhost;
                  location / {
                      return 200 'Hello from Ansible!';
                  }
              }
          }
        dest: /etc/nginx/nginx.conf
        group: root
        mode: '0644'
        owner: root
      name: Create/modify /etc/nginx/nginx.conf
      notify:
      - restart nginx
      when: ansible_distribution == 'Debian'
    - delay: 5
      name: Ensure nginx is started
      register: nginx_started_result
      retries: 3
      service:
        enabled: true
        name: nginx
        state: started
      when: ansible_distribution == 'Debian'
    - delay: 5
      name: Verify nginx is serving content
      register: nginx_response
      retries: 3
      until: nginx_response.status == 200
      uri:
        status_code: 200
        url: http://localhost
    name: Other tasks
  vars:
    target_db_servers: db_servers
    target_web_servers: web_servers
